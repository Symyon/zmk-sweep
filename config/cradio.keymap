/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_italian.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&mt {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
    bindings = <&kp>, <&kp>;
};

&sk { ignore-modifiers; };

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys

        combo_settings {
            timeout-ms = <300>;
            key-positions = <30 31>;
            bindings = <&lt 4 TAB>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <22 23>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <32 33>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&kp Q           &kp W        &kp E             &kp R             &kp T    &kp Y            &kp U             &kp I           &kp O        &kp P
&mt LEFT_GUI A  &mt LCTRL S  &mt LEFT_SHIFT D  &mt LEFT_SHIFT F  &kp G    &kp H            &mt LEFT_SHIFT J  &mt LEFT_ALT K  &mt LCTRL L  &mt LEFT_GUI SEMICOLON
&kp Z           &kp X        &kp C             &kp V             &kp B    &kp N            &kp M             &kp COMMA       &kp DOT      &kp SLASH
                                               &lt 3 SPACE       &sl 2    &lt 1 BACKSPACE  &lt 1 ENTER
            >;
        };

        Numbers {
            bindings = <
&trans        &trans      &trans        &trans        &trans        &kp LS(RIGHT_BRACKET)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&kp LEFT_GUI  &kp LCTRL   &kp LEFT_ALT  &kp LSHFT     &trans        &kp N0                 &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&kp C_PLAY    &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &kp SQT                &kp N7        &kp N8        &kp N9        &trans
                                        &trans        &trans        &trans                 &trans
            >;
        };

        symbols {
            bindings = <
&kp LS(Q)         &kp LS(W)   &kp LS(E)              &kp LS(N5)         &kp TILDE           &kp GRAVE         &kp LS(NUMBER_3)   &kp LS(NUMBER_2)  &kp MINUS             &kp EQUAL
&kp LS(NUMBER_1)  &kp LS(N7)  &kp SQT                &kp LS(SQT)        &kp LS(NUMBER_4)    &kp LS(NUMBER_6)  &kp LS(N9)         &kp LS(N0)        &kp LS(MINUS)         &kp LS(EQUAL)
&kp LS(Z)         &kp LS(N8)  &kp LS(RIGHT_BRACKET)  &kp RIGHT_BRACKET  &trans              &trans            &kp LS(BACKSLASH)  &kp BACKSLASH     &kp LS(LEFT_BRACKET)  &kp LBKT
                                                     &trans             &trans              &trans            &trans
            >;
        };

        nav {
            bindings = <
&trans        &kp HOME   &kp END       &kp LC(PERIOD)  &kp LC(I)    &trans              &trans    &trans         &trans     &kp RIGHT
&kp LEFT_GUI  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_SHIFT  &trans       &kp LC(B)           &kp LEFT  &trans         &kp PG_UP  &kp PG_DN
&trans        &trans     &kp DOWN      &kp UP_ARROW    &trans       &kp LC(LEFT_ARROW)  &trans    &kp LC(RIGHT)  &trans     &trans
                                       &trans          &trans       &trans              &trans
            >;
        };

        settings_layer {
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &trans  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none   &none  &none
&none        &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none   &none  &none
                           &none       &none           &none         &none
            >;
        };
    };
};

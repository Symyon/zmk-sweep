/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_italian.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&mt {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
    quick-tap-ms = <90>;
    require-prior-idle-ms = <125>;
};

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        tmux_l: tmux_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp L>;
            label = "TMUX_L";
        };

        tmux_h: tmux_h {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp J>;
            label = "TMUX_H";
        };

        tmux_j: tmux_j {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp C>;
            label = "TMUX_J";
        };

        tmux_k: tmux_k {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp V>;
            label = "TMUX_K";
        };

        tmux_cmd: tmux_cmd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LS(Z)>;
            label = "TMUX_CMD";
        };

        tmux_s: tmux_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp SEMICOLON>;
            label = "TMUX_S";
        };

        tmux_new_win: tmux_new_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp I>;
            label = "TMUX_NEW_WIN";
        };

        tmux_split_h: tmux_split_h {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp BACKSLASH>;
            label = "TMUX_SPLIT_H";
        };

        tmux_split_v: tmux_split_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LS(SQT)>;
            label = "TMUX_SPLIT_V";
        };

        tmux_n_win: tmux_n_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp L>;
            label = "TMUX_N_WIN";
        };

        tmux_p_w: tmux_p_w {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp R>;
            label = "TMUX_P_W";
        };

        tmux_x_win: tmux_x_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LS(Z) &kp V &kp G &kp P &kp P &kp SQT &kp COMMA &kp G &kp L &kp H &kp S &kp COMMA &kp ENTER>;
            label = "TMUX_X_WIN";
        };

        tmux_search: tmux_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp MINUS>;
            label = "TMUX_SEARCH";
        };

        inspect_element: inspect_element {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp RCLK &kp X>;
            label = "INSPECT_ELEMENT";
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys

        combo_settings {
            timeout-ms = <300>;
            key-positions = <1 2>;
            bindings = <&lt 4 TAB>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <22 23>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <7 8>;
        };

        inspect_element {
            bindings = <&inspect_element>;
            key-positions = <0 10>;
        };

        Ctrl-a {
            bindings = <&kp LC(A)>;
            key-positions = <26 27>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&kp Q    &kp W        &kp E           &kp R           &kp T          &kp Y            &kp U               &kp I           &kp O        &kp P
&lt 3 A  &mt LCTRL S  &mt LEFT_ALT D  &kp F           &kp G          &kp H            &kp J               &mt LEFT_ALT K  &mt LCTRL L  &kp SEMI
&kp Z    &kp X        &kp C           &kp V           &kp B          &kp N            &kp M               &kp COMMA       &kp PERIOD   &kp SLASH
                                      &kp LEFT_SHIFT  &lt 1 SPACE    &lt 2 BACKSPACE  &mt LEFT_GUI ENTER
            >;
        };

        symbols {
            bindings = <
&kp LS(Q)         &kp LS(W)   &kp LS(E)     &kp LS(N5)             &kp TILDE           &kp GRAVE         &kp LS(NUMBER_2)   &kp LS(NUMBER_3)  &kp MINUS             &kp EQUAL
&kp LS(NUMBER_1)  &kp LS(N7)  &kp SQT       &kp LS(RIGHT_BRACKET)  &kp LS(NUMBER_4)    &kp LS(NUMBER_6)  &kp LS(N9)         &kp LS(N0)        &kp LS(MINUS)         &kp LS(EQUAL)
&kp LS(Z)         &kp LS(N8)  &kp LS(APOS)  &kp RIGHT_BRACKET      &trans              &trans            &kp LS(BACKSLASH)  &kp BACKSLASH     &kp LS(LEFT_BRACKET)  &kp LBKT
                                            &trans                 &trans              &trans            &trans
            >;
        };

        Numbers {
            bindings = <
&trans        &trans      &trans        &trans        &trans        &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LS(RIGHT_BRACKET)
&kp LEFT_GUI  &kp LCTRL   &kp LEFT_ALT  &kp LSHFT     &trans        &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0
&kp C_PLAY    &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &trans  &kp N7        &kp N8        &kp N9        &kp SQT
                                        &trans        &trans        &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &kp HOME  &kp END    &kp LC(PERIOD)  &kp LC(I)    &trans              &trans    &trans         &kp LC(T)      &kp RIGHT
&trans  &trans    &kp LC(A)  &kp LC(SLASH)   &kp TAB      &kp LC(B)           &kp LEFT  &trans         &kp LC(PG_UP)  &kp LC(PAGE_DOWN)
&trans  &trans    &kp DOWN   &kp UP_ARROW    &trans       &kp LC(LEFT_ARROW)  &trans    &kp LC(RIGHT)  &trans         &kp LC(Y)
                             &trans          &trans       &trans              &trans
            >;
        };

        settings_layer {
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &trans  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none   &none  &none
&none        &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none   &none  &none
                           &none       &none           &none         &none
            >;
        };
    };
};
